{"version":3,"sources":["serviceWorker.js","lib/welcome.txt.js","lib/persist.js","KeyBindingsModal.js","MenuBar.js","SearchLibraryModal.js","Editor.js","lib/loadJs.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","welcome_txt","PERSIST_KEY_PREFIX","storage","localStorage","getPersist","key","item","getItem","concat","JSON","parse","err","setPersist","value","setItem","stringify","CONTENT_KEY","persistContent","text","trim","getPersistContent","welcome","VIM_MODE_KEY","keys","mac","pc","Key","_ref","style","rest","Object","objectWithoutProperties","react_default","a","createElement","assign","objectSpread","fontFamily","fontSize","display","borderRadius","padding","boxShadow","margin","verticalAlign","background","fontWeight","color","fontVariant","KeyBindingsModal","_ref2","isOpen","onRequestClose","lib_default","overlay","alignItems","justifyContent","content","position","marginTop","width","map","_ref3","KeyBindingsModal_Key","Seperator","MenuBar","editor","editorVimModeEnabled","onToggleVimMode","_useState","useState","_useState2","slicedToArray","isModalOpen","setIsModalOpen","overflow","MenuBar_Seperator","cursor","type","checked","onChange","marginLeft","onClick","src_KeyBindingsModal","focus","Modal","setAppElement","SearchLibraryModal","onAdd","setValue","_useState3","_useState4","loading","setLoading","_useState5","_useState6","searchResults","setSearchResults","close","flexDirection","height","onSubmit","e","str","preventDefault","fetch","then","response","json","data","results","catch","error","alert","message","boxSizing","autoFocus","disabled","target","flex","name","latest","evalText","result","eval","call","console","log","isString","clearConsole","clear","getNextValue","libraries","regex","libs","url","join","split","filter","line","test","Toast","title","wordBreak","Editor","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","persist","debounce","commands","bindKey","win","exec","getValue","setState","modalIsOpen","prettier","format","singleQuote","parser","plugins","babylon","onAddLib","state","some","o","toast","warn","loadLib","_this$state","src","_this2","Promise","resolve","reject","validUrl","isUri","s","document","onload","onerror","head","appendChild","success","_ref4","toConsumableArray","_this3","forEach","_ref5","_this4","_this$props","vimModeOn","onLoad","_this$state2","react","react_ace_lib_default","mode","theme","enableBasicAutocompletion","enableLiveAutocompletion","editorProps","$blockScrolling","Infinity","keyboardHandler","undefined","setOptions","tabSize","loadLibs","top","right","zIndex","src_SearchLibraryModal","Component","configure","POSITION","BOTTOM_RIGHT","containerStyle","bottom","left","itemStyle","editorContainerStyle","App","isVimEnabled","setIsVimEnabled","setEditor","src_MenuBar","src_Editor","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4eba5234.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default `\n// Having fun with js code snippets!\n\n// Made with ❤ By Zill Ding at https://github.com/zillding/js-playground\n\n// key bindings:\n// |    mac    |     pc     |                |\n// |:---------:|:----------:|----------------|\n// | cmd+enter | ctrl+enter | run code       |\n// | cmd+k     | ctrl+k     | clear console  |\n// | cmd+s     | ctrl+s     | format code    |\n// | cmd+o     | ctrl+o     | search library |\n\nalert('This is an AWESOME app!');\nconsole.log('Happy coooooding'); // open developer console to view result\n`;\n","import welcome from './welcome.txt';\n\nconst PERSIST_KEY_PREFIX = 'js-playground-by-zill';\n\nconst { NODE_ENV } = process.env;\nconst storage = NODE_ENV === 'production' ? localStorage : sessionStorage;\n\nfunction getPersist(key) {\n  try {\n    const item = storage.getItem(`${PERSIST_KEY_PREFIX}-${key}`);\n    return JSON.parse(item);\n  } catch (err) {\n    return null;\n  }\n}\n\nfunction setPersist(key, value) {\n  storage.setItem(`${PERSIST_KEY_PREFIX}-${key}`, JSON.stringify(value));\n}\n\nconst CONTENT_KEY = 'content';\nexport function persistContent(text) {\n  setPersist(CONTENT_KEY, text.trim());\n}\n\nexport function getPersistContent() {\n  const persistContent = getPersist(CONTENT_KEY) || '';\n  return `${persistContent.trim() || welcome.trim()}\\n`;\n}\n\nconst VIM_MODE_KEY = 'vim-mode-enabled';\nexport function setPersistVimMode(mode) {\n  setPersist(VIM_MODE_KEY, mode);\n}\n\nexport function getPersistVimMode() {\n  return getPersist(VIM_MODE_KEY) || false;\n}\n","import React from 'react';\nimport Modal from 'react-modal';\n\nconst keys = [\n  {\n    mac: ['cmd', 'enter'],\n    pc: ['ctrl', 'enter'],\n    text: 'run code'\n  },\n  {\n    mac: ['cmd', 'k'],\n    pc: ['ctrl', 'k'],\n    text: 'clear console'\n  },\n  {\n    mac: ['cmd', 's'],\n    pc: ['ctrl', 's'],\n    text: 'format code'\n  },\n  {\n    mac: ['cmd', 'o'],\n    pc: ['ctrl', 'o'],\n    text: 'search library'\n  }\n];\n\nconst Key = ({ style, ...rest }) => (\n  <kbd\n    style={{\n      fontFamily: 'Consolas, \"Lucida Console\", monospace',\n      fontSize: 18,\n      display: 'inline-block',\n      borderRadius: '3px',\n      padding: '0px 4px',\n      boxShadow: '1px 1px 1px #777',\n      margin: '2px',\n      verticalAlign: 'text-bottom',\n      background: '#eee',\n      fontWeight: '600',\n      color: '#555',\n      fontVariant: 'small-caps',\n      ...style\n    }}\n    {...rest}\n  />\n);\n\nfunction KeyBindingsModal({ isOpen, onRequestClose }) {\n  return (\n    <Modal\n      style={{\n        overlay: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        content: { position: 'static' }\n      }}\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n    >\n      <h4 style={{ marginTop: 0 }}>Key Bindings</h4>\n      <table style={{ width: '100%' }}>\n        <thead>\n          <tr>\n            <th>mac</th>\n            <th>pc</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {keys.map(({ mac, pc, text }) => (\n            <tr key={text}>\n              <td style={{ padding: '2px 12px' }}>\n                {mac.map(key => (\n                  <Key key={key}>{key}</Key>\n                ))}\n              </td>\n              <td style={{ padding: '2px 12px' }}>\n                {pc.map(key => (\n                  <Key key={key}>{key}</Key>\n                ))}\n              </td>\n              <td>{text}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Modal>\n  );\n}\n\nexport default KeyBindingsModal;\n","import React, { useState } from 'react';\n\nimport KeyBindingsModal from './KeyBindingsModal';\n\nconst Seperator = () => <span style={{ margin: '0 4px' }}>|</span>;\n\nfunction MenuBar({ editor, editorVimModeEnabled, onToggleVimMode }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        overflow: 'auto',\n        padding: 4\n      }}\n    >\n      <span>JS Playground</span>\n      <Seperator />\n      <label style={{ display: 'flex', cursor: 'pointer' }}>\n        <input\n          type=\"checkbox\"\n          style={{ cursor: 'pointer' }}\n          checked={editorVimModeEnabled}\n          onChange={onToggleVimMode}\n        />\n        {editorVimModeEnabled ? 'Vim On' : 'Vim Off'}\n      </label>\n\n      <button\n        style={{ marginLeft: 'auto' }}\n        onClick={() => {\n          setIsModalOpen(true);\n        }}\n      >\n        ?\n      </button>\n      <KeyBindingsModal\n        isOpen={isModalOpen}\n        onRequestClose={() => {\n          setIsModalOpen(false);\n          editor.focus();\n        }}\n      />\n    </div>\n  );\n}\n\nexport default MenuBar;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\n\nfunction searchLib(str) {\n  return fetch(`https://api.cdnjs.com/libraries?search=${str.trim()}`)\n    .then(response => response.json())\n    .then(data => data.results);\n}\n\nfunction SearchLibraryModal({ isOpen, onRequestClose, onAdd }) {\n  const [value, setValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n\n  function close() {\n    setValue('');\n    setSearchResults([]);\n    onRequestClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onRequestClose={close}>\n      <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            setLoading(true);\n            searchLib(value)\n              .then(data => {\n                setLoading(false);\n                setSearchResults(data);\n              })\n              .catch(error => {\n                setLoading(false);\n                alert(error.message);\n              });\n          }}\n        >\n          <input\n            style={{ width: '100%', boxSizing: 'border-box' }}\n            autoFocus\n            disabled={loading}\n            value={value}\n            onChange={e => {\n              setValue(e.target.value);\n            }}\n          />\n        </form>\n        <div style={{ flex: 1, overflow: 'auto' }}>\n          <ul>\n            {searchResults.map(({ name, latest }) => (\n              <li key={name} style={{ margin: '2px 0' }}>\n                <button\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => {\n                    close();\n                    onAdd(latest);\n                  }}\n                >\n                  <strong>{name}</strong> - {latest}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default SearchLibraryModal;\n","import React, { Component, Fragment } from 'react';\nimport debounce from 'lodash/debounce';\nimport isString from 'lodash/isString';\nimport prettier from 'prettier/standalone';\nimport babylon from 'prettier/parser-babylon';\nimport AceEditor from 'react-ace';\nimport { toast } from 'react-toastify';\n\nimport { persistContent, getPersistContent } from './lib/persist';\nimport loadJs from './lib/loadJs';\nimport SearchLibraryModal from './SearchLibraryModal';\n\nfunction evalText(text) {\n  try {\n    // eval the js code in the global context\n    // so can access everything in the developer console\n    const result = eval.call(window, text); // eslint-disable-line no-eval\n\n    console.log(\n      '%c→',\n      'color: darkgrey',\n      isString(result) ? JSON.stringify(result) : result\n    );\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction clearConsole() {\n  console.clear && console.clear();\n}\n\nfunction getNextValue(value, libraries) {\n  const regex = /^\\/\\/@@\\s+(\\S*)/;\n  const libs = libraries\n    .map(({ url }) => `//@@ ${url}`)\n    .join('\\n')\n    .trim();\n  const content = value\n    .split('\\n')\n    .filter(line => !regex.test(line))\n    .join('\\n')\n    .trim();\n  return `${libs}\\n\\n${content}`;\n}\n\nfunction Toast({ title, text }) {\n  return (\n    <div style={{ wordBreak: 'break-word' }}>\n      {title && <strong>{title}</strong>}\n      {title && text && <div style={{ height: 4 }} />}\n      {text && <p style={{ margin: 0 }}>{text}</p>}\n    </div>\n  );\n}\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: getPersistContent(),\n      modalIsOpen: false,\n      libraries: []\n    };\n  }\n\n  persist = debounce(persistContent, 500);\n  commands = [\n    {\n      name: 'runCommand',\n      bindKey: {\n        win: 'Ctrl-Enter',\n        mac: 'Command-Enter'\n      },\n      exec: editor => evalText(editor.getValue())\n    },\n    {\n      name: 'clearCommand',\n      bindKey: {\n        win: 'Ctrl-k',\n        mac: 'Command-k'\n      },\n      exec: clearConsole\n    },\n    {\n      name: 'searchLibCommand',\n      bindKey: {\n        win: 'Ctrl-o',\n        mac: 'Command-o'\n      },\n      exec: () => {\n        this.setState({ modalIsOpen: true });\n      }\n    },\n    {\n      name: 'formatCommand',\n      bindKey: {\n        win: 'Ctrl-s',\n        mac: 'Command-s'\n      },\n      exec: editor => {\n        this.setState(({ libraries }) => ({\n          value: prettier.format(getNextValue(editor.getValue(), libraries), {\n            singleQuote: true,\n            parser: 'babel',\n            plugins: [babylon]\n          })\n        }));\n      }\n    }\n  ];\n\n  onChange = value => {\n    this.setState({ value });\n    this.persist(value);\n  };\n\n  onAddLib = url => {\n    const { libraries } = this.state;\n\n    if (libraries.some(o => o.url === url)) {\n      toast.warn(<Toast title=\"The library is already loaded.\" text={url} />);\n      return;\n    }\n\n    this.loadLib(url).then(() => {\n      const { value, libraries } = this.state;\n      this.onChange(getNextValue(value, libraries));\n    });\n  };\n\n  loadLib(url) {\n    return loadJs(url)\n      .then(() => {\n        toast.success(<Toast title=\"JS loaded!\" text={url} />);\n        this.setState(({ libraries }) => ({\n          libraries: [...libraries, { url }]\n        }));\n      })\n      .catch(() => {\n        toast.error(<Toast title=\"JS load failed.\" text={url} />);\n      });\n  }\n\n  loadLibs() {\n    const { value } = this.state;\n\n    const regex = /^\\/\\/@@\\s+(\\S*)/;\n    value.split('\\n').forEach(line => {\n      const [, url] = regex.exec(line) || [];\n      if (url) {\n        this.loadLib(url);\n      }\n    });\n  }\n\n  render() {\n    const { vimModeOn, onLoad } = this.props;\n    const { value, modalIsOpen } = this.state;\n\n    return (\n      <Fragment>\n        <AceEditor\n          mode=\"javascript\"\n          theme=\"monokai\"\n          focus\n          enableBasicAutocompletion\n          enableLiveAutocompletion\n          editorProps={{ $blockScrolling: Infinity }}\n          style={{\n            position: 'absolute',\n            height: '100%',\n            width: '100%'\n          }}\n          keyboardHandler={vimModeOn ? 'vim' : undefined}\n          setOptions={{\n            tabSize: 2\n          }}\n          commands={this.commands}\n          value={value}\n          onLoad={o => {\n            onLoad(o);\n            this.loadLibs();\n          }}\n          onChange={this.onChange}\n        />\n\n        <button\n          style={{\n            position: 'absolute',\n            top: 10,\n            right: 10,\n            zIndex: 9999\n          }}\n          onClick={() => {\n            evalText(value);\n          }}\n        >\n          run\n        </button>\n\n        <SearchLibraryModal\n          isOpen={modalIsOpen}\n          onRequestClose={() => {\n            this.setState({ modalIsOpen: false });\n          }}\n          onAdd={this.onAddLib}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Editor;\n","import validUrl from 'valid-url';\n\nexport default function(src) {\n  return new Promise((resolve, reject) => {\n    if (!validUrl.isUri(src)) {\n      reject();\n      return;\n    }\n\n    const s = document.createElement('script');\n    s.src = src;\n    s.onload = resolve;\n    s.onerror = reject;\n    document.head.appendChild(s);\n  });\n}\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getPersistVimMode, setPersistVimMode } from './lib/persist';\nimport MenuBar from './MenuBar';\nimport Editor from './Editor';\n\ntoast.configure({\n  position: toast.POSITION.BOTTOM_RIGHT\n});\n\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'stretch',\n  position: 'fixed',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0\n};\nconst itemStyle = { flex: 0 };\nconst editorContainerStyle = {\n  flex: 1,\n  position: 'relative'\n};\n\nfunction App() {\n  const [isVimEnabled, setIsVimEnabled] = useState(getPersistVimMode());\n  const [editor, setEditor] = useState();\n\n  return (\n    <div style={containerStyle}>\n      <div style={itemStyle}>\n        <MenuBar\n          editor={editor}\n          editorVimModeEnabled={isVimEnabled}\n          onToggleVimMode={() => {\n            const value = !isVimEnabled;\n            setIsVimEnabled(value);\n            setPersistVimMode(value);\n            editor.focus();\n          }}\n        />\n      </div>\n      <div style={editorContainerStyle}>\n        <Editor vimModeOn={isVimEnabled} onLoad={setEditor} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}