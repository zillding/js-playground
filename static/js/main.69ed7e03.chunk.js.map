{"version":3,"sources":["serviceWorker.js","lib/welcome.txt.js","lib/persist.js","KeyBindingsModal.js","MenuBar.js","SearchLibraryModal.js","Editor.js","lib/loadJs.js","App.js","index.js","KeyBindingsModal.module.css","SearchLibraryModal.module.css"],"names":["Boolean","window","location","hostname","match","value","PERSIST_KEY_PREFIX","storage","localStorage","getPersist","key","item","getItem","JSON","parse","err","setPersist","setItem","stringify","CONTENT_KEY","persistContent","text","trim","getPersistContent","welcome","VIM_MODE_KEY","keys","mac","pc","Key","props","className","styles","KeyBindingsModal","isOpen","onRequestClose","style","overlay","display","alignItems","justifyContent","content","position","marginTop","width","map","td","Seperator","margin","MenuBar","editor","editorVimModeEnabled","onToggleVimMode","useState","isModalOpen","setIsModalOpen","overflow","padding","cursor","type","checked","onChange","marginLeft","onClick","focus","currentRequest","SearchLibraryModal","onAdd","listEl","useRef","loading","setLoading","searchResults","setSearchResults","selectedItemIndex","setSelectedItemIndex","search","useDebouncedCallback","str","request","fetch","then","response","json","data","results","searchLib","catch","error","alert","message","close","useEffect","current","scrollToItem","flexDirection","height","boxSizing","fontSize","border","borderRadius","autoFocus","e","target","onKeyDown","length","keyCode","keycode","preventDefault","latest","top","flex","ref","itemCount","itemSize","index","name","backgroundColor","undefined","href","evalText","result","eval","call","console","log","isString","clearConsole","clear","getNextValue","libraries","regex","libs","url","join","split","filter","line","test","Toast","title","wordBreak","Editor","persist","debounce","commands","bindKey","win","exec","getValue","setState","modalIsOpen","prettier","format","singleQuote","parser","onAddLib","state","some","o","toast","warn","loadLib","src","Promise","resolve","reject","validUrl","isUri","s","document","createElement","onload","onerror","head","appendChild","success","this","forEach","vimModeOn","onLoad","mode","theme","enableBasicAutocompletion","enableLiveAutocompletion","editorProps","$blockScrolling","Infinity","keyboardHandler","setOptions","tabSize","loadLibs","right","zIndex","Component","configure","POSITION","BOTTOM_RIGHT","containerStyle","bottom","left","itemStyle","editorContainerStyle","App","isVimEnabled","setIsVimEnabled","setEditor","Modal","setAppElement","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.69ed7e03.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const value = `\n// Having fun with js code snippets!\n\n// Made with ❤ By Zill Ding at https://github.com/zillding/js-playground\n\n// key bindings:\n// |    mac    |     pc     |                |\n// |:---------:|:----------:|----------------|\n// | cmd+enter | ctrl+enter | run code       |\n// | cmd+k     | ctrl+k     | clear console  |\n// | cmd+s     | ctrl+s     | format code    |\n// | cmd+o     | ctrl+o     | search library |\n\nalert('This is an AWESOME app!');\nconsole.log('Happy coooooding'); // open developer console to view result\n`;\n\nexport default value;\n","import welcome from './welcome.txt';\n\nconst PERSIST_KEY_PREFIX = 'js-playground-by-zill';\n\nconst { NODE_ENV } = process.env;\nconst storage = NODE_ENV === 'production' ? localStorage : sessionStorage;\n\nfunction getPersist(key) {\n  try {\n    const item = storage.getItem(`${PERSIST_KEY_PREFIX}-${key}`);\n    return JSON.parse(item);\n  } catch (err) {\n    return null;\n  }\n}\n\nfunction setPersist(key, value) {\n  storage.setItem(`${PERSIST_KEY_PREFIX}-${key}`, JSON.stringify(value));\n}\n\nconst CONTENT_KEY = 'content';\nexport function persistContent(text) {\n  setPersist(CONTENT_KEY, text.trim());\n}\n\nexport function getPersistContent() {\n  const persistContent = getPersist(CONTENT_KEY) || '';\n  return `${persistContent.trim() || welcome.trim()}\\n`;\n}\n\nconst VIM_MODE_KEY = 'vim-mode-enabled';\nexport function setPersistVimMode(mode) {\n  setPersist(VIM_MODE_KEY, mode);\n}\n\nexport function getPersistVimMode() {\n  return getPersist(VIM_MODE_KEY) || false;\n}\n","import React from 'react';\nimport Modal from 'react-modal';\n\nimport styles from './KeyBindingsModal.module.css';\n\nconst keys = [\n  {\n    mac: ['cmd', 'enter'],\n    pc: ['ctrl', 'enter'],\n    text: 'run code',\n  },\n  {\n    mac: ['cmd', 'k'],\n    pc: ['ctrl', 'k'],\n    text: 'clear console',\n  },\n  {\n    mac: ['cmd', 's'],\n    pc: ['ctrl', 's'],\n    text: 'format code',\n  },\n  {\n    mac: ['cmd', 'o'],\n    pc: ['ctrl', 'o'],\n    text: 'search library',\n  },\n];\n\nconst Key = (props) => <kbd className={styles.key} {...props} />;\n\nfunction KeyBindingsModal({ isOpen, onRequestClose }) {\n  return (\n    <Modal\n      style={{\n        overlay: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n        content: { position: 'static' },\n      }}\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n    >\n      <h4 style={{ marginTop: 0 }}>Key Bindings</h4>\n      <table style={{ width: '100%' }}>\n        <thead>\n          <tr>\n            <th>mac</th>\n            <th>pc</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {keys.map(({ mac, pc, text }) => (\n            <tr key={text}>\n              <td className={styles.td}>\n                {mac.map((key) => (\n                  <Key key={key}>{key}</Key>\n                ))}\n              </td>\n              <td className={styles.td}>\n                {pc.map((key) => (\n                  <Key key={key}>{key}</Key>\n                ))}\n              </td>\n              <td>{text}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Modal>\n  );\n}\n\nexport default KeyBindingsModal;\n","import React, { useState } from 'react';\n\nimport KeyBindingsModal from './KeyBindingsModal';\n\nconst Seperator = () => <span style={{ margin: '0 4px' }}>|</span>;\n\nfunction MenuBar({ editor, editorVimModeEnabled, onToggleVimMode }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        overflow: 'auto',\n        padding: 4,\n      }}\n    >\n      <span>JS Playground</span>\n      <Seperator />\n      <label style={{ display: 'flex', cursor: 'pointer' }}>\n        <input\n          type=\"checkbox\"\n          style={{ cursor: 'pointer' }}\n          checked={editorVimModeEnabled}\n          onChange={onToggleVimMode}\n        />\n        {editorVimModeEnabled ? 'Vim On' : 'Vim Off'}\n      </label>\n\n      <button\n        style={{ marginLeft: 'auto' }}\n        onClick={() => {\n          setIsModalOpen(true);\n        }}\n      >\n        ?\n      </button>\n      <KeyBindingsModal\n        isOpen={isModalOpen}\n        onRequestClose={() => {\n          setIsModalOpen(false);\n          editor.focus();\n        }}\n      />\n    </div>\n  );\n}\n\nexport default MenuBar;\n","import React, { useState, useRef, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport keycode from 'keycode';\nimport { FixedSizeList as List } from 'react-window';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport styles from './SearchLibraryModal.module.css';\n\nfunction searchLib(str) {\n  return fetch(`https://api.cdnjs.com/libraries?search=${str.trim()}`)\n    .then((response) => response.json())\n    .then((data) => data.results);\n}\n\nlet currentRequest;\n\nfunction SearchLibraryModal({ isOpen, onRequestClose, onAdd }) {\n  const listEl = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedItemIndex, setSelectedItemIndex] = useState(0);\n  const search = useDebouncedCallback((str) => {\n    if (!str.trim()) return;\n    setLoading(true);\n    const request = searchLib(str)\n      .then((data) => {\n        if (request !== currentRequest) return;\n        setLoading(false);\n        setSearchResults(data);\n      })\n      .catch((error) => {\n        if (request !== currentRequest) return;\n        setLoading(false);\n        alert(error.message);\n      });\n    currentRequest = request;\n  }, 500);\n\n  useEffect(() => {\n    listEl.current && listEl.current.scrollToItem(selectedItemIndex);\n  }, [selectedItemIndex]);\n\n  function close() {\n    setSearchResults([]);\n    onRequestClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onRequestClose={close}>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n        }}\n      >\n        <input\n          style={{\n            width: '100%',\n            boxSizing: 'border-box',\n            fontSize: 18,\n            border: '1px #ddd solid',\n            borderRadius: 4,\n            padding: '4px 8px',\n          }}\n          autoFocus\n          onChange={(e) => {\n            search(e.target.value);\n          }}\n          onKeyDown={(e) => {\n            if (!searchResults.length) return;\n            switch (e.keyCode) {\n              case keycode('up'):\n                e.preventDefault();\n                setSelectedItemIndex(\n                  selectedItemIndex === 0\n                    ? searchResults.length - 1\n                    : selectedItemIndex - 1\n                );\n                return;\n              case keycode('down'):\n                e.preventDefault();\n                setSelectedItemIndex(\n                  selectedItemIndex === searchResults.length - 1\n                    ? 0\n                    : selectedItemIndex + 1\n                );\n                return;\n              case keycode('enter'):\n                if (searchResults[selectedItemIndex]) {\n                  close();\n                  onAdd(searchResults[selectedItemIndex].latest);\n                }\n                break;\n              default:\n                return;\n            }\n          }}\n        />\n        {loading && (\n          <span\n            style={{\n              position: 'absolute',\n              top: 4,\n              fontSize: 12,\n            }}\n          >\n            searching...\n          </span>\n        )}\n        <div style={{ flex: 1, overflow: 'auto' }}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <List\n                ref={listEl}\n                height={height}\n                itemCount={searchResults.length}\n                itemSize={30}\n                width={width}\n              >\n                {({ index, style }) => {\n                  const { name, latest } = searchResults[index];\n                  return (\n                    <div\n                      className={styles.item}\n                      style={{\n                        ...style,\n                        backgroundColor:\n                          selectedItemIndex === index ? '#ddd' : undefined,\n                      }}\n                    >\n                      <strong>{name}</strong> - <a href={latest}>{latest}</a>\n                    </div>\n                  );\n                }}\n              </List>\n            )}\n          </AutoSizer>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default SearchLibraryModal;\n","import React, { Component, Fragment } from 'react';\nimport debounce from 'lodash/debounce';\nimport isString from 'lodash/isString';\nimport prettier from 'prettier/standalone';\nimport AceEditor from 'react-ace';\nimport { toast } from 'react-toastify';\n\nimport { persistContent, getPersistContent } from './lib/persist';\nimport loadJs from './lib/loadJs';\nimport SearchLibraryModal from './SearchLibraryModal';\n\nfunction evalText(text) {\n  try {\n    // eval the js code in the global context\n    // so can access everything in the developer console\n    const result = eval.call(window, text); // eslint-disable-line no-eval\n\n    console.log(\n      '%c→',\n      'color: darkgrey',\n      isString(result) ? JSON.stringify(result) : result\n    );\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction clearConsole() {\n  console.clear && console.clear();\n}\n\nfunction getNextValue(value, libraries) {\n  const regex = /^\\/\\/@@\\s+(\\S*)/;\n  const libs = libraries\n    .map(({ url }) => `//@@ ${url}`)\n    .join('\\n')\n    .trim();\n  const content = value\n    .split('\\n')\n    .filter((line) => !regex.test(line))\n    .join('\\n')\n    .trim();\n  return `${libs}\\n\\n${content}`;\n}\n\nfunction Toast({ title, text }) {\n  return (\n    <div style={{ wordBreak: 'break-word' }}>\n      {title && <strong>{title}</strong>}\n      {title && text && <div style={{ height: 4 }} />}\n      {text && <p style={{ margin: 0 }}>{text}</p>}\n    </div>\n  );\n}\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: getPersistContent(),\n      modalIsOpen: false,\n      libraries: [],\n    };\n  }\n\n  persist = debounce(persistContent, 500);\n  commands = [\n    {\n      name: 'runCommand',\n      bindKey: {\n        win: 'Ctrl-Enter',\n        mac: 'Command-Enter',\n      },\n      exec: (editor) => evalText(editor.getValue()),\n    },\n    {\n      name: 'clearCommand',\n      bindKey: {\n        win: 'Ctrl-k',\n        mac: 'Command-k',\n      },\n      exec: clearConsole,\n    },\n    {\n      name: 'searchLibCommand',\n      bindKey: {\n        win: 'Ctrl-o',\n        mac: 'Command-o',\n      },\n      exec: () => {\n        this.setState({ modalIsOpen: true });\n      },\n    },\n    {\n      name: 'formatCommand',\n      bindKey: {\n        win: 'Ctrl-s',\n        mac: 'Command-s',\n      },\n      exec: (editor) => {\n        this.setState(({ libraries }) => ({\n          value: prettier.format(getNextValue(editor.getValue(), libraries), {\n            singleQuote: true,\n            parser: 'babel',\n          }),\n        }));\n      },\n    },\n  ];\n\n  onChange = (value) => {\n    this.setState({ value });\n    this.persist(value);\n  };\n\n  onAddLib = (url) => {\n    const { libraries } = this.state;\n\n    if (libraries.some((o) => o.url === url)) {\n      toast.warn(<Toast title=\"The library is already loaded.\" text={url} />);\n      return;\n    }\n\n    this.loadLib(url).then(() => {\n      const { value, libraries } = this.state;\n      this.onChange(getNextValue(value, libraries));\n    });\n  };\n\n  loadLib(url) {\n    return loadJs(url)\n      .then(() => {\n        toast.success(<Toast title=\"JS loaded!\" text={url} />);\n        this.setState(({ libraries }) => ({\n          libraries: [...libraries, { url }],\n        }));\n      })\n      .catch(() => {\n        toast.error(<Toast title=\"JS load failed.\" text={url} />);\n      });\n  }\n\n  loadLibs() {\n    const { value } = this.state;\n\n    const regex = /^\\/\\/@@\\s+(\\S*)/;\n    value.split('\\n').forEach((line) => {\n      const [, url] = regex.exec(line) || [];\n      if (url) {\n        this.loadLib(url);\n      }\n    });\n  }\n\n  render() {\n    const { vimModeOn, onLoad } = this.props;\n    const { value, modalIsOpen } = this.state;\n\n    return (\n      <Fragment>\n        <AceEditor\n          mode=\"javascript\"\n          theme=\"monokai\"\n          focus\n          enableBasicAutocompletion\n          enableLiveAutocompletion\n          editorProps={{ $blockScrolling: Infinity }}\n          style={{\n            position: 'absolute',\n            height: '100%',\n            width: '100%',\n          }}\n          keyboardHandler={vimModeOn ? 'vim' : undefined}\n          setOptions={{\n            tabSize: 2,\n          }}\n          commands={this.commands}\n          value={value}\n          onLoad={(o) => {\n            onLoad(o);\n            this.loadLibs();\n          }}\n          onChange={this.onChange}\n        />\n\n        <button\n          style={{\n            position: 'absolute',\n            top: 10,\n            right: 10,\n            zIndex: 9999,\n          }}\n          onClick={() => {\n            evalText(value);\n          }}\n        >\n          run\n        </button>\n\n        <SearchLibraryModal\n          isOpen={modalIsOpen}\n          onRequestClose={() => {\n            this.setState({ modalIsOpen: false });\n          }}\n          onAdd={this.onAddLib}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Editor;\n","import validUrl from 'valid-url';\n\nexport default function loadJs(src) {\n  return new Promise((resolve, reject) => {\n    if (!validUrl.isUri(src)) {\n      reject();\n      return;\n    }\n\n    const s = document.createElement('script');\n    s.src = src;\n    s.onload = resolve;\n    s.onerror = reject;\n    document.head.appendChild(s);\n  });\n}\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getPersistVimMode, setPersistVimMode } from './lib/persist';\nimport MenuBar from './MenuBar';\nimport Editor from './Editor';\n\ntoast.configure({\n  position: toast.POSITION.BOTTOM_RIGHT,\n});\n\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'stretch',\n  position: 'fixed',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n};\nconst itemStyle = { flex: 0 };\nconst editorContainerStyle = {\n  flex: 1,\n  position: 'relative',\n};\n\nfunction App() {\n  const [isVimEnabled, setIsVimEnabled] = useState(getPersistVimMode());\n  const [editor, setEditor] = useState();\n\n  return (\n    <div style={containerStyle}>\n      <div style={itemStyle}>\n        <MenuBar\n          editor={editor}\n          editorVimModeEnabled={isVimEnabled}\n          onToggleVimMode={() => {\n            const value = !isVimEnabled;\n            setIsVimEnabled(value);\n            setPersistVimMode(value);\n            editor.focus();\n          }}\n        />\n      </div>\n      <div style={editorContainerStyle}>\n        <Editor vimModeOn={isVimEnabled} onLoad={setEditor} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Modal from 'react-modal';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\n// bind modal to app root: http://reactcommunity.org/react-modal/accessibility/\nModal.setAppElement('#root');\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"key\":\"KeyBindingsModal_key__18X5U\",\"td\":\"KeyBindingsModal_td__2WFrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SearchLibraryModal_item__2gBXq\"};"],"sourceRoot":""}