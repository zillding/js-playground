{"version":3,"sources":["KeyBindingsModal.module.css","SearchLibraryModal.module.css","serviceWorker.js","lib/persist.js","lib/welcome.txt.js","KeyBindingsModal.js","MenuBar.js","SearchLibraryModal.js","Editor.js","lib/loadJs.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","storage","localStorage","getPersist","key","item","getItem","JSON","parse","err","setPersist","value","setItem","stringify","persistContent","text","trim","getPersistContent","keys","mac","pc","Key","props","className","styles","KeyBindingsModal","isOpen","onRequestClose","style","overlay","display","alignItems","justifyContent","content","position","marginTop","width","map","td","Seperator","margin","MenuBar","currentRequest","editor","editorVimModeEnabled","onToggleVimMode","useState","isModalOpen","setIsModalOpen","overflow","padding","cursor","type","checked","onChange","marginLeft","onClick","focus","SearchLibraryModal","onAdd","listEl","useRef","loading","setLoading","searchResults","setSearchResults","selectedItemIndex","setSelectedItemIndex","search","useCallback","debounce","str","request","fetch","then","response","json","data","results","searchLib","catch","error","alert","message","close","useEffect","current","scrollToItem","flexDirection","height","boxSizing","fontSize","border","borderRadius","autoFocus","e","target","onKeyDown","length","keyCode","keycode","preventDefault","latest","top","flex","ref","itemCount","itemSize","index","name","backgroundColor","undefined","href","evalText","result","eval","call","console","log","isString","clearConsole","clear","getNextValue","libraries","regex","libs","url","join","split","filter","line","test","Toast","title","wordBreak","Editor","persist","commands","bindKey","win","exec","getValue","setState","modalIsOpen","prettier","format","singleQuote","parser","plugins","babylon","onAddLib","state","some","o","toast","warn","loadLib","src","Promise","resolve","reject","validUrl","isUri","s","document","createElement","onload","onerror","head","appendChild","success","this","forEach","vimModeOn","onLoad","mode","theme","enableBasicAutocompletion","enableLiveAutocompletion","editorProps","$blockScrolling","Infinity","keyboardHandler","setOptions","tabSize","loadLibs","right","zIndex","Component","configure","POSITION","BOTTOM_RIGHT","containerStyle","bottom","left","itemStyle","editorContainerStyle","App","isVimEnabled","setIsVimEnabled","setEditor","Modal","setAppElement","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a1d03ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"key\":\"KeyBindingsModal_key__18X5U\",\"td\":\"KeyBindingsModal_td__2WFrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SearchLibraryModal_item__2gBXq\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import welcome from './welcome.txt';\n\nconst PERSIST_KEY_PREFIX = 'js-playground-by-zill';\n\nconst { NODE_ENV } = process.env;\nconst storage = NODE_ENV === 'production' ? localStorage : sessionStorage;\n\nfunction getPersist(key) {\n  try {\n    const item = storage.getItem(`${PERSIST_KEY_PREFIX}-${key}`);\n    return JSON.parse(item);\n  } catch (err) {\n    return null;\n  }\n}\n\nfunction setPersist(key, value) {\n  storage.setItem(`${PERSIST_KEY_PREFIX}-${key}`, JSON.stringify(value));\n}\n\nconst CONTENT_KEY = 'content';\nexport function persistContent(text) {\n  setPersist(CONTENT_KEY, text.trim());\n}\n\nexport function getPersistContent() {\n  const persistContent = getPersist(CONTENT_KEY) || '';\n  return `${persistContent.trim() || welcome.trim()}\\n`;\n}\n\nconst VIM_MODE_KEY = 'vim-mode-enabled';\nexport function setPersistVimMode(mode) {\n  setPersist(VIM_MODE_KEY, mode);\n}\n\nexport function getPersistVimMode() {\n  return getPersist(VIM_MODE_KEY) || false;\n}\n","export default `\n// Having fun with js code snippets!\n\n// Made with ❤ By Zill Ding at https://github.com/zillding/js-playground\n\n// key bindings:\n// |    mac    |     pc     |                |\n// |:---------:|:----------:|----------------|\n// | cmd+enter | ctrl+enter | run code       |\n// | cmd+k     | ctrl+k     | clear console  |\n// | cmd+s     | ctrl+s     | format code    |\n// | cmd+o     | ctrl+o     | search library |\n\nalert('This is an AWESOME app!');\nconsole.log('Happy coooooding'); // open developer console to view result\n`;\n","import React from 'react';\nimport Modal from 'react-modal';\n\nimport styles from './KeyBindingsModal.module.css';\n\nconst keys = [\n  {\n    mac: ['cmd', 'enter'],\n    pc: ['ctrl', 'enter'],\n    text: 'run code'\n  },\n  {\n    mac: ['cmd', 'k'],\n    pc: ['ctrl', 'k'],\n    text: 'clear console'\n  },\n  {\n    mac: ['cmd', 's'],\n    pc: ['ctrl', 's'],\n    text: 'format code'\n  },\n  {\n    mac: ['cmd', 'o'],\n    pc: ['ctrl', 'o'],\n    text: 'search library'\n  }\n];\n\nconst Key = props => <kbd className={styles.key} {...props} />;\n\nfunction KeyBindingsModal({ isOpen, onRequestClose }) {\n  return (\n    <Modal\n      style={{\n        overlay: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        content: { position: 'static' }\n      }}\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n    >\n      <h4 style={{ marginTop: 0 }}>Key Bindings</h4>\n      <table style={{ width: '100%' }}>\n        <thead>\n          <tr>\n            <th>mac</th>\n            <th>pc</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {keys.map(({ mac, pc, text }) => (\n            <tr key={text}>\n              <td className={styles.td}>\n                {mac.map(key => (\n                  <Key key={key}>{key}</Key>\n                ))}\n              </td>\n              <td className={styles.td}>\n                {pc.map(key => (\n                  <Key key={key}>{key}</Key>\n                ))}\n              </td>\n              <td>{text}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Modal>\n  );\n}\n\nexport default KeyBindingsModal;\n","import React, { useState } from 'react';\n\nimport KeyBindingsModal from './KeyBindingsModal';\n\nconst Seperator = () => <span style={{ margin: '0 4px' }}>|</span>;\n\nfunction MenuBar({ editor, editorVimModeEnabled, onToggleVimMode }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        overflow: 'auto',\n        padding: 4\n      }}\n    >\n      <span>JS Playground</span>\n      <Seperator />\n      <label style={{ display: 'flex', cursor: 'pointer' }}>\n        <input\n          type=\"checkbox\"\n          style={{ cursor: 'pointer' }}\n          checked={editorVimModeEnabled}\n          onChange={onToggleVimMode}\n        />\n        {editorVimModeEnabled ? 'Vim On' : 'Vim Off'}\n      </label>\n\n      <button\n        style={{ marginLeft: 'auto' }}\n        onClick={() => {\n          setIsModalOpen(true);\n        }}\n      >\n        ?\n      </button>\n      <KeyBindingsModal\n        isOpen={isModalOpen}\n        onRequestClose={() => {\n          setIsModalOpen(false);\n          editor.focus();\n        }}\n      />\n    </div>\n  );\n}\n\nexport default MenuBar;\n","import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport debounce from 'lodash/debounce';\nimport keycode from 'keycode';\nimport { FixedSizeList as List } from 'react-window';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport styles from './SearchLibraryModal.module.css';\n\nfunction searchLib(str) {\n  return fetch(`https://api.cdnjs.com/libraries?search=${str.trim()}`)\n    .then(response => response.json())\n    .then(data => data.results);\n}\n\nlet currentRequest;\n\nfunction SearchLibraryModal({ isOpen, onRequestClose, onAdd }) {\n  const listEl = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedItemIndex, setSelectedItemIndex] = useState(0);\n  const search = useCallback(\n    debounce(str => {\n      if (!str.trim()) return;\n      setLoading(true);\n      const request = searchLib(str)\n        .then(data => {\n          if (request !== currentRequest) return;\n          setLoading(false);\n          setSearchResults(data);\n        })\n        .catch(error => {\n          if (request !== currentRequest) return;\n          setLoading(false);\n          alert(error.message);\n        });\n      currentRequest = request;\n    }, 500),\n    []\n  );\n\n  useEffect(() => {\n    listEl.current && listEl.current.scrollToItem(selectedItemIndex);\n  }, [selectedItemIndex]);\n\n  function close() {\n    setSearchResults([]);\n    onRequestClose();\n  }\n\n  return (\n    <Modal isOpen={isOpen} onRequestClose={close}>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%'\n        }}\n      >\n        <input\n          style={{\n            width: '100%',\n            boxSizing: 'border-box',\n            fontSize: 18,\n            border: '1px #ddd solid',\n            borderRadius: 4,\n            padding: '4px 8px'\n          }}\n          autoFocus\n          onChange={e => {\n            search(e.target.value);\n          }}\n          onKeyDown={e => {\n            if (!searchResults.length) return;\n            switch (e.keyCode) {\n              case keycode('up'):\n                e.preventDefault();\n                setSelectedItemIndex(\n                  selectedItemIndex === 0\n                    ? searchResults.length - 1\n                    : selectedItemIndex - 1\n                );\n                return;\n              case keycode('down'):\n                e.preventDefault();\n                setSelectedItemIndex(\n                  selectedItemIndex === searchResults.length - 1\n                    ? 0\n                    : selectedItemIndex + 1\n                );\n                return;\n              case keycode('enter'):\n                if (searchResults[selectedItemIndex]) {\n                  close();\n                  onAdd(searchResults[selectedItemIndex].latest);\n                }\n                break;\n              default:\n                return;\n            }\n          }}\n        />\n        {loading && (\n          <span\n            style={{\n              position: 'absolute',\n              top: 4,\n              fontSize: 12\n            }}\n          >\n            searching...\n          </span>\n        )}\n        <div style={{ flex: 1, overflow: 'auto' }}>\n          <AutoSizer>\n            {({ height, width }) => (\n              <List\n                ref={listEl}\n                height={height}\n                itemCount={searchResults.length}\n                itemSize={30}\n                width={width}\n              >\n                {({ index, style }) => {\n                  const { name, latest } = searchResults[index];\n                  return (\n                    <div\n                      className={styles.item}\n                      style={{\n                        ...style,\n                        backgroundColor:\n                          selectedItemIndex === index ? '#ddd' : undefined\n                      }}\n                    >\n                      <strong>{name}</strong> - <a href={latest}>{latest}</a>\n                    </div>\n                  );\n                }}\n              </List>\n            )}\n          </AutoSizer>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default SearchLibraryModal;\n","import React, { Component, Fragment } from 'react';\nimport debounce from 'lodash/debounce';\nimport isString from 'lodash/isString';\nimport prettier from 'prettier/standalone';\nimport babylon from 'prettier/parser-babylon';\nimport AceEditor from 'react-ace';\nimport { toast } from 'react-toastify';\n\nimport { persistContent, getPersistContent } from './lib/persist';\nimport loadJs from './lib/loadJs';\nimport SearchLibraryModal from './SearchLibraryModal';\n\nfunction evalText(text) {\n  try {\n    // eval the js code in the global context\n    // so can access everything in the developer console\n    const result = eval.call(window, text); // eslint-disable-line no-eval\n\n    console.log(\n      '%c→',\n      'color: darkgrey',\n      isString(result) ? JSON.stringify(result) : result\n    );\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction clearConsole() {\n  console.clear && console.clear();\n}\n\nfunction getNextValue(value, libraries) {\n  const regex = /^\\/\\/@@\\s+(\\S*)/;\n  const libs = libraries\n    .map(({ url }) => `//@@ ${url}`)\n    .join('\\n')\n    .trim();\n  const content = value\n    .split('\\n')\n    .filter(line => !regex.test(line))\n    .join('\\n')\n    .trim();\n  return `${libs}\\n\\n${content}`;\n}\n\nfunction Toast({ title, text }) {\n  return (\n    <div style={{ wordBreak: 'break-word' }}>\n      {title && <strong>{title}</strong>}\n      {title && text && <div style={{ height: 4 }} />}\n      {text && <p style={{ margin: 0 }}>{text}</p>}\n    </div>\n  );\n}\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: getPersistContent(),\n      modalIsOpen: false,\n      libraries: []\n    };\n  }\n\n  persist = debounce(persistContent, 500);\n  commands = [\n    {\n      name: 'runCommand',\n      bindKey: {\n        win: 'Ctrl-Enter',\n        mac: 'Command-Enter'\n      },\n      exec: editor => evalText(editor.getValue())\n    },\n    {\n      name: 'clearCommand',\n      bindKey: {\n        win: 'Ctrl-k',\n        mac: 'Command-k'\n      },\n      exec: clearConsole\n    },\n    {\n      name: 'searchLibCommand',\n      bindKey: {\n        win: 'Ctrl-o',\n        mac: 'Command-o'\n      },\n      exec: () => {\n        this.setState({ modalIsOpen: true });\n      }\n    },\n    {\n      name: 'formatCommand',\n      bindKey: {\n        win: 'Ctrl-s',\n        mac: 'Command-s'\n      },\n      exec: editor => {\n        this.setState(({ libraries }) => ({\n          value: prettier.format(getNextValue(editor.getValue(), libraries), {\n            singleQuote: true,\n            parser: 'babel',\n            plugins: [babylon]\n          })\n        }));\n      }\n    }\n  ];\n\n  onChange = value => {\n    this.setState({ value });\n    this.persist(value);\n  };\n\n  onAddLib = url => {\n    const { libraries } = this.state;\n\n    if (libraries.some(o => o.url === url)) {\n      toast.warn(<Toast title=\"The library is already loaded.\" text={url} />);\n      return;\n    }\n\n    this.loadLib(url).then(() => {\n      const { value, libraries } = this.state;\n      this.onChange(getNextValue(value, libraries));\n    });\n  };\n\n  loadLib(url) {\n    return loadJs(url)\n      .then(() => {\n        toast.success(<Toast title=\"JS loaded!\" text={url} />);\n        this.setState(({ libraries }) => ({\n          libraries: [...libraries, { url }]\n        }));\n      })\n      .catch(() => {\n        toast.error(<Toast title=\"JS load failed.\" text={url} />);\n      });\n  }\n\n  loadLibs() {\n    const { value } = this.state;\n\n    const regex = /^\\/\\/@@\\s+(\\S*)/;\n    value.split('\\n').forEach(line => {\n      const [, url] = regex.exec(line) || [];\n      if (url) {\n        this.loadLib(url);\n      }\n    });\n  }\n\n  render() {\n    const { vimModeOn, onLoad } = this.props;\n    const { value, modalIsOpen } = this.state;\n\n    return (\n      <Fragment>\n        <AceEditor\n          mode=\"javascript\"\n          theme=\"monokai\"\n          focus\n          enableBasicAutocompletion\n          enableLiveAutocompletion\n          editorProps={{ $blockScrolling: Infinity }}\n          style={{\n            position: 'absolute',\n            height: '100%',\n            width: '100%'\n          }}\n          keyboardHandler={vimModeOn ? 'vim' : undefined}\n          setOptions={{\n            tabSize: 2\n          }}\n          commands={this.commands}\n          value={value}\n          onLoad={o => {\n            onLoad(o);\n            this.loadLibs();\n          }}\n          onChange={this.onChange}\n        />\n\n        <button\n          style={{\n            position: 'absolute',\n            top: 10,\n            right: 10,\n            zIndex: 9999\n          }}\n          onClick={() => {\n            evalText(value);\n          }}\n        >\n          run\n        </button>\n\n        <SearchLibraryModal\n          isOpen={modalIsOpen}\n          onRequestClose={() => {\n            this.setState({ modalIsOpen: false });\n          }}\n          onAdd={this.onAddLib}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Editor;\n","import validUrl from 'valid-url';\n\nexport default function(src) {\n  return new Promise((resolve, reject) => {\n    if (!validUrl.isUri(src)) {\n      reject();\n      return;\n    }\n\n    const s = document.createElement('script');\n    s.src = src;\n    s.onload = resolve;\n    s.onerror = reject;\n    document.head.appendChild(s);\n  });\n}\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getPersistVimMode, setPersistVimMode } from './lib/persist';\nimport MenuBar from './MenuBar';\nimport Editor from './Editor';\n\ntoast.configure({\n  position: toast.POSITION.BOTTOM_RIGHT\n});\n\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'stretch',\n  position: 'fixed',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0\n};\nconst itemStyle = { flex: 0 };\nconst editorContainerStyle = {\n  flex: 1,\n  position: 'relative'\n};\n\nfunction App() {\n  const [isVimEnabled, setIsVimEnabled] = useState(getPersistVimMode());\n  const [editor, setEditor] = useState();\n\n  return (\n    <div style={containerStyle}>\n      <div style={itemStyle}>\n        <MenuBar\n          editor={editor}\n          editorVimModeEnabled={isVimEnabled}\n          onToggleVimMode={() => {\n            const value = !isVimEnabled;\n            setIsVimEnabled(value);\n            setPersistVimMode(value);\n            editor.focus();\n          }}\n        />\n      </div>\n      <div style={editorContainerStyle}>\n        <Editor vimModeOn={isVimEnabled} onLoad={setEditor} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Modal from 'react-modal';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\n// bind modal to app root: http://reactcommunity.org/react-modal/accessibility/\nModal.setAppElement('#root');\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}